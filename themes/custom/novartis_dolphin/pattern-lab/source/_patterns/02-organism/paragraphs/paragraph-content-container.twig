{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}
{%
  set gradienttype = attributes.hasClass('field-container-background-type-none') ? '' : content.field_gradient_type[0]['#markup']
%}
{% block paragraph %}
  {% if gradienttype|render %}
    <div class="{{ gradienttype }}">
  {% endif %}
    <div{{ attributes.addClass(classes) }}>
      {% if not content.field_full_width.0|render|striptags|trim %}
        <div class="container">
      {% endif %}
        {% if heading|render %}
          {% block heading %}
            {% if heading %}
              {% include '@atoms/07-elements/headings/heading.twig' with {
                "heading_level": heading_level ?: 3,
                "heading": heading
              } %}
            {% endif %}
          {% endblock heading %}
        {% endif %}
        {% block content %}
          {{ content|without('field_title', 'field_gradient_type', 'field_background_image', 'field_full_width')}}
        {% endblock %}
        {% block button %}
          {% if button %}
          <div>
            {% include '@atoms/05-links/links.twig' with {
              "attributes": attributes,
              "text": text
            } %}
          </div>
          {% endif %}
        {% endblock button %}
      {% if not content.field_full_width.0|render|striptags|trim %}
        </div>
      {% endif %}
      {% if credits %}
        <span class="image--credit p-credits">
          {{ credits }}
        </span>
      {% endif %}
    </div>
  {% if gradienttype|render %}
    </div>
  {% endif %}
{% endblock paragraph %}
